function [BW,maskedImage] = segmentImage2(X)
%segmentImage Segment image using auto-generated code from imageSegmenter app
%  [BW,MASKEDIMAGE] = segmentImage(X) segments image X using auto-generated
%  code from the imageSegmenter app. The final segmentation is returned in
%  BW, and a masked image is returned in MASKEDIMAGE.

% Auto-generated by imageSegmenter app on 10-May-2020
%----------------------------------------------------


% Adjust data to span data range.
X = imadjust(X);
gaborX = createGaborFeatures(X);

% Graph cut with texture
foregroundInd = [228 741 1253 1254 1766 2016 2060 2061 2063 2064 2069 2074 2077 2081 2086 2089 2093 2095 2099 2104 2107 2109 2113 2115 2118 2121 2126 2128 2132 2134 2137 2140 2144 2146 2151 2156 2159 2162 2166 2170 2172 2177 2179 2181 2569 2570 2694 2791 3206 3552 3592 4230 4616 4741 5253 5640 5765 6788 7812 8161 8324 9226 9859 10370 11394 11740 12298 12417 13440 14307 14975 15372 15999 16510 17533 18393 18556 18915 19417 19579 20091 20952 21625 21976 22029 22488 23000 23160 24024 24183 25048 25206 25572 25614 26072 26740 28120 28644 28786 29199 29809 30680 30831 31760 33240 33389 33899 34321 34788 35945 36312 37991 39383 39526 39955 40406 41060 41444 42454 42593 43104 44639 45661 46038 47125 47196 47707 48728 49622 49636 50264 51284 51286 52247 52308 53330 53718 53841 54352 55766 55780 55886 56908 58391 58442 58838 59977 60439 60998 61398 62487 62532 62934 62998 63972 64022 64067 65557 65601 66006 66581 66623 68054 68117 68156 68580 69653 69690 70101 70675 71224 71637 72210 72660 72758 73746 73780 74196 74724 74768 75315 75731 75825 76303 76336 77359 77778 77869 78308 78863 78892 79314 79403 79913 80337 80399 80423 80424 81422 81873 81957 82446 82467 83409 83470 83489 83982 84000 84494 85006 85007 85019 85021 85457 86040 86481 86499 86550 87570 89041 90577 92624 94689 95184 97744 100304 101840 102366 104912 107472 107486 109520 112592 113116 116176 117200 118745 119256 119767 120277 120279 120284 121298 121299 121300 121809 122317 122319 122820 122825 123315 123344 123835 123838 125904 126428 126928 128464 130524 131024 133583 133596 135631 138190 138204 140238 142286 143310 143324 145358 146382 146397 147406 149454 150990 151006 152014 154062 154079 155086 156622 157646 158670 158688 160718 162272 163278 164832 165326 166862 166880 168398 168928 169440 170446 171982 173518 174560 175566 176590 176608 177614 180174 180192 181710 182752 183246 184270 184288 185806 187854 188384 189390 191438 192480 193998 195551 196046 198094 198111 199630 200654 201183 202190 203214 203742 205774 207822 207838 209374 210382 211918 212446 213454 213982 216014 216542 217550 219086 220622 220638 221646 222158 223198 223694 224718 226254 226270 227790 229838 230366 231374 232910 234462 234958 235982 238542 238558 240590 242126 244190 244686 247758 247774 249806 249821 251356 253902 253916 256987 257998 260058 261070 262618 263118 264142 265690 266702 269785 270798 272345 274894 276953 278990 280025 280526 283097 283598 285144 286670 288727 289230 291798 292814 293334 295374 295892 297422 298452 299982 300500 301523 302034 302545 303054 303057 304081 304592 305104 305616 306110 306127 306621 306623 306638 306639 307135 307150 307648 307662 308160 308253 308256 308259 308263 308265 308268 308664 308672 308762 308782 308784 308787 309184 309198 309268 309270 309272 309303 309305 309310 309684 309686 309696 309824 309827 309830 309832 309835 309838 309844 309849 309852 309856 309857 309861 309863 309866 309868 309871 309874 309877 309881 309885 310208 310222 310403 310406 310410 310412 310706 310928 310930 310934 310938 310941 311216 311232 311245 311246 311313 311458 311460 311463 311466 311727 311757 311981 311986 311988 311991 311993 311997 312236 312256 312269 312510 312513 312515 312518 312746 312768 313031 313033 313255 313280 313293 313294 313548 313762 313763 313792 313805 314062 314304 314317 314577 314781 315090 315092 315094 315096 315097 315287 315290 315328 315341 315797 315853 315920 315921 316123 316308 316434 316637 316638 316641 316816 316818 316863 316946 317155 317458 317460 317668 317670 317824 317826 317829 317830 317832 317835 317837 317886 317902 318183 318184 318185 318332 318334 318485 318697 318836 318838 318839 318840 318842 318910 318997 318999 319209 319210 319340 319343 319345 319346 319512 319847 319848 319849 319851 319852 319934 320025 320234 320354 320356 320357 320538 320541 320746 320830 320832 320833 320835 320837 320838 320841 320843 320844 320846 320848 320849 320852 320854 320856 320857 320859 320861 320862 320865 320956 321055 321258 321341 321467 321569 321572 321769 321770 321772 321774 321777 321779 321780 321782 321783 321786 321788 321790 321792 321794 321797 321798 321799 321801 321802 321804 321805 321807 321810 321812 321814 321816 321819 321821 321824 321827 321829 321831 321832 321834 321835 321837 321840 321843 321846 321848 321850 321851 321998 322088 322091 322216 322222 322227 322230 322232 322236 322240 322243 322246 322251 322254 322260 322262 322267 322269 322272 322274 322277 322278 322279 322280 322281 322490 322609 322719 322724 322793 323125 323131 323137 323142 323150 323156 323162 323166 323172 323176 323180 323184 323188 323193 323199 323203 323210 323215 323223 323309 323313 323403 323407 323410 323413 323416 323420 323425 323427 323431 323436 323439 323443 323444 323449 323459 323507 323510 323512 323829 323834 323838 323839 323842 323844 323846 323848 323850 323853 323856 323861 323864 323867 323873 323880 323883 323889 323894 323900 323906 323909 323912 323977 324018 324492 324493 324528 325012 325015 325019 325023 325025 325029 325030 325033 325034 325036 325037 325070 326606 ];
backgroundInd
L = superpixels(X,2525);
BW = lazysnapping(gaborX,L,foregroundInd,backgroundInd);

% Create masked image.
maskedImage = X;
maskedImage(~BW) = 0;
end

function gaborFeatures = createGaborFeatures(im)

if size(im,3) == 3
    im = prepLab(im);
end

im = im2single(im);

imageSize = size(im);
numRows = imageSize(1);
numCols = imageSize(2);

wavelengthMin = 4/sqrt(2);
wavelengthMax = hypot(numRows,numCols);
n = floor(log2(wavelengthMax/wavelengthMin));
wavelength = 2.^(0:(n-2)) * wavelengthMin;

deltaTheta = 45;
orientation = 0:deltaTheta:(180-deltaTheta);

g = gabor(wavelength,orientation);
gabormag = imgaborfilt(im(:,:,1),g);

for i = 1:length(g)
    sigma = 0.5*g(i).Wavelength;
    K = 3;
    gabormag(:,:,i) = imgaussfilt(gabormag(:,:,i),K*sigma);
end

% Increases liklihood that neighboring pixels/subregions are segmented together
X = 1:numCols;
Y = 1:numRows;
[X,Y] = meshgrid(X,Y);
featureSet = cat(3,gabormag,X);
featureSet = cat(3,featureSet,Y);
featureSet = reshape(featureSet,numRows*numCols,[]);

% Normalize feature set
featureSet = featureSet - mean(featureSet);
featureSet = featureSet ./ std(featureSet);

gaborFeatures = reshape(featureSet,[numRows,numCols,size(featureSet,2)]);

% Add color/intensity into feature set
gaborFeatures = cat(3,gaborFeatures,im);

end

function out = prepLab(in)

% Convert L*a*b* image to range [0,1]
out = in;
out(:,:,1) = in(:,:,1) / 100;  % L range is [0 100].
out(:,:,2) = (in(:,:,2) + 86.1827) / 184.4170;  % a* range is [-86.1827,98.2343].
out(:,:,3) = (in(:,:,3) + 107.8602) / 202.3382;  % b* range is [-107.8602,94.4780].

end
