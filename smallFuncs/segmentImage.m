function [BW,maskedImage] = segmentImage(X)
%segmentImage Segment image using auto-generated code from imageSegmenter app
%  [BW,MASKEDIMAGE] = segmentImage(X) segments image X using auto-generated
%  code from the imageSegmenter app. The final segmentation is returned in
%  BW, and a masked image is returned in MASKEDIMAGE.

% Auto-generated by imageSegmenter app on 10-May-2020
%----------------------------------------------------


% Adjust data to span data range.
X = imadjust(X);
gaborX = createGaborFeatures(X);

% Graph cut with texture
foregroundInd = [4191 4703 5209 5215 6749 8231 8237 8736 8761 9264 9286 9766 10296 10319 10777 10780 10830 11237 11801 11857 11876 11878 12312 12350 12390 12883 12887 13337 13395 13919 13920 14419 14438 14912 15382 16455 16466 16983 16996 17472 17892 18467 18513 19022 19989 20063 20543 20964 21576 22059 23124 23129 23644 24123 24597 24668 25139 25142 25150 25153 25161 25175 26084 26188 26647 27202 27228 27701 27713 27728 28223 29247 29271 29744 30237 30274 30278 31320 31784 31794 31798 32298 32308 34276 34886 34898 35877 37411 38946 40524 41038 43552 44516 45632 45640 48157 48196 49214 50238 50241 50750 55868 56345 59960 60388 62486 64048 65046 67095 67112 68120 68132 68634 68639 72164 85476 94180 105444 112100 121316 122819 122821 122822 122824 122825 122826 122827 122828 122830 122832 122833 122835 122836 122837 122839 122840 122842 122845 122846 122848 123329 123330 123838 123839 123840 123841 130020 134116 140260 146404 150500 156132 160740 164836 168932 176100 183780 188388 196580 203236 207332 212452 217572 222180 226276 232420 238564 245220 249316 254436 257508 261092 266212 269284 273380 276964 280036 283620 287717 291301 294885 297445 300005 301029 301541 302565 304101 307686 308278 308281 308287 308291 308297 308300 308784 309291 309331 309734 309848 310364 310758 310819 310881 310884 310889 310892 310898 310902 310908 310911 310917 310919 310925 310930 310935 311450 311968 312294 312997 313318 313512 313517 313776 313830 314546 314799 314908 314911 314916 314918 314923 314926 314932 314936 314940 314945 314948 314952 314954 314957 314958 314961 314965 314967 314971 314974 314975 314980 314983 314987 314988 314994 314998 314999 315004 315007 315011 315015 315016 315021 315062 315307 315416 315535 315878 315926 316050 316091 316328 316437 316472 316543 316567 316568 316575 316581 316605 316837 316902 316967 317055 317083 317101 317121 317344 317347 317469 317507 317511 317525 317532 317535 317540 317545 317551 317559 317564 317567 317621 317638 317839 317842 317845 317848 317851 317969 318010 318115 318141 318146 318152 318158 318161 318164 318167 318169 318171 318172 318175 318177 318182 318185 318188 318191 318193 318195 318198 318201 318349 318666 318849 318850 318853 318855 318857 318858 318979 318980 318981 318983 318985 318992 319014 319019 319023 319144 319148 319180 319182 319184 319185 319188 319189 319190 319191 319228 319232 319236 319239 319243 319247 319354 319356 319359 319690 319694 319761 319860 319862 319864 320180 320198 320277 320280 320282 320696 320704 320797 320799 320801 320881 320883 321317 321320 321323 321391 321837 321839 321900 322353 322408 322410 322867 322870 322917 323384 323386 323388 323414 323415 323417 323420 323422 323424 323902 323903 323905 323906 323908 323910 323911 323913 323915 323917 323919 323921 323924 ];
backgroundInd
L = superpixels(X,2525);
BW = lazysnapping(gaborX,L,foregroundInd,backgroundInd);

% Clear borders
BW = imclearborder(BW);

% Graph cut with texture
foregroundInd = [2017 2277 2529 3041 3213 3556 4065 5188 5193 5200 5204 5211 5214 5219 5223 5225 5228 5231 5668 5672 5682 5692 6175 6257 6259 6626 6683 6772 6774 7138 7194 7287 7705 7800 8217 8313 8674 9188 9338 9699 9753 10364 10777 10876 10877 10889 11236 12413 12772 12825 13284 13437 13447 13849 14309 14873 14972 14981 15897 15994 16356 16506 16870 17025 17527 17945 18039 18919 19070 19481 19573 20596 20604 22505 22642 23012 23065 23664 23671 25198 25625 26738 27628 27754 28132 29721 30310 31727 31844 32874 33376 33817 34398 34908 35941 37401 37873 39961 40420 40946 41566 43545 45146 46105 47092 48726 50676 51225 51794 53732 53841 56909 57369 58443 58870 61000 62488 62948 63045 64579 67137 68089 69181 70166 70203 70712 72244 73722 73776 74212 75286 76333 76842 77864 78373 79382 79894 79905 80416 80868 81431 81435 81437 81944 81945 82426 90084 91642 93690 96228 97786 101882 105956 107514 110586 112100 114671 115684 115706 116205 116206 117228 117738 118249 118756 120286 120292 120314 120794 122324 123340 123386 123846 124342 124350 125946 127482 130042 131556 134138 136676 143354 143844 151034 153059 161762 161787 166881 168443 176097 178683 181217 188385 190971 195553 199648 199675 206303 210909 212475 218588 225754 226299 231384 236502 238587 242645 246267 250323 257530 258001 263120 268239 269815 271823 275407 275445 277455 280015 283087 283124 286159 287695 291314 291791 295375 295920 297935 298959 300495 302031 302543 302575 303567 304079 305086 305087 305088 305089 305090 305103 305597 306115 307139 307151 307182 307640 308175 308312 308316 308319 308322 308325 308327 308332 308335 308339 308341 308346 308349 308351 308821 308866 308867 308870 308872 309172 309326 309329 309387 309389 309711 309834 309835 309905 309909 309911 310193 310223 310342 310426 310723 310850 310853 310940 310944 311216 311247 311355 311356 311359 311789 311838 311841 311846 311848 311851 311854 311857 311860 311863 311864 311972 311976 312237 312491 312493 312496 312748 312771 312783 313011 313258 313356 313358 313359 313360 313528 313767 313768 314043 314277 314319 314558 315074 315075 315297 315299 315590 315884 315910 316105 316109 316355 316623 316626 316629 316630 316829 316879 317145 317148 317340 317391 317442 317443 317661 317664 317954 318178 318179 318181 318183 318184 318186 318360 318400 318467 318471 318700 318702 318704 318706 318927 318952 318987 319220 319221 319223 319381 319571 319575 319578 319582 319588 319594 319602 319608 319615 319737 319739 319740 319890 320017 320024 320032 320038 320045 320052 320059 320067 320073 320078 320139 320252 320253 320463 320765 320766 320906 320909 320958 321260 321261 321264 321268 321271 321275 321279 321284 321287 321290 321294 321489 321693 321786 321810 321925 321982 322221 322224 322231 322241 322293 322327 322331 322336 322341 322344 322432 322513 322531 322759 322861 322865 322870 322873 322940 323003 323278 323284 323292 323300 323305 323311 323315 323390 323393 323395 323398 323402 323405 323407 323409 323411 323412 323415 323418 323420 323422 323424 323426 323428 323430 323431 323435 323439 323442 323446 323450 323512 323550 324021 324022 324051 324531 324565 325078 325081 ];
backgroundInd = [204 435 716 947 1228 1229 1741 1742 1971 2767 3508 3793 4003 4305 4515 4516 4532 5029 5541 5844 6565 6870 7077 7092 7923 8408 8409 8613 9435 9948 9949 9962 9964 10149 10164 10462 10464 10465 10471 10472 10978 10980 10981 10982 11173 13733 14261 14757 16293 16821 17829 18341 19365 19877 20406 20902 22356 22364 22438 22885 22966 23876 23975 25455 25512 25526 25912 26536 26550 28027 28072 28085 28456 28584 29621 30496 30633 30644 31621 32179 32537 33203 33706 34069 34187 34738 35249 36114 36238 36785 37646 37776 37809 38314 39690 39857 40337 41393 41732 42898 42922 43776 44465 45818 46997 47018 47348 47537 48869 48876 50090 50097 50409 50584 50915 51422 52950 53169 54170 54481 55210 55729 56009 56218 57258 57537 58288 59067 59290 60088 60336 61338 61354 61562 62131 62641 62896 65709 65962 65968 66458 68212 68266 68521 69822 70063 70257 70823 71080 71791 72600 73128 73324 74671 74857 75427 75688 76390 76693 77223 78434 79520 79782 80036 80479 80481 80805 82351 82832 82851 83037 83611 84386 85409 85593 85659 86413 86432 86944 86959 87697 87968 88149 88992 89171 89482 89738 90031 90778 91727 92552 92750 93103 93822 94113 94282 94792 95150 95813 96323 96410 97342 97909 98221 98871 98875 99891 100400 100509 100742 101291 101420 101931 101998 102826 104553 105125 105384 107430 108132 109477 110470 111030 111523 111710 112431 113568 114071 114479 114606 115095 115629 115899 116120 116632 116649 116824 117658 118181 118683 119197 119714 120216 120221 120403 120735 121246 121755 121762 122265 122266 122669 123301 124622 124838 125318 125518 126377 128587 129452 129834 130990 132487 133554 134215 135603 135912 137654 138122 138678 140064 140215 140869 141197 141752 143759 143801 144825 144964 145146 145810 146360 147861 150786 151451 152129 154528 156429 157604 160321 161543 163603 164268 164929 167855 169239 171440 172609 175023 177217 180653 182043 182849 184250 184251 184763 185770 185921 186299 188348 189884 190529 190696 191420 193447 193468 195137 195516 197540 198076 199233 200124 201504 202145 202172 202817 203708 205244 205756 206751 207577 207804 209821 209985 210364 212924 213917 213948 215484 215617 216508 218399 219068 220225 221116 221905 222785 224188 225180 225489 225564 226747 228419 228563 230164 230298 230331 230468 230616 231693 232158 233199 233211 233403 234569 235451 236987 238490 239035 240571 241236 241594 242074 243642 244666 245340 245658 245690 247225 248249 249444 249753 249784 251320 252824 253367 254064 254903 256118 256404 256438 257462 257936 258688 258998 260237 260533 260757 260765 261002 261288 261557 261569 262324 262580 263358 263552 263603 264115 264131 264395 265083 265138 266460 266612 266673 267495 267626 267696 267717 268535 268640 268742 269057 269232 269657 269743 270094 270106 270115 270121 270128 270136 270139 270147 270152 270160 270254 270790 271277 271815 272301 273324 273351 273835 274375 274859 275911 276394 276423 276934 277416 277446 278439 278470 278950 278980 279492 280515 280995 281025 282016 282018 282049 283039 283549 283581 284570 285592 285625 286101 286102 287158 287633 287635 288144 288180 288655 289164 289202 290183 290186 290224 291205 291343 291349 291354 291360 291366 291371 291374 291379 291383 291390 291398 291407 291417 291425 291436 291714 291848 291962 292223 292356 292479 292483 292730 292733 293002 293529 295477 295478 295481 295483 295485 295487 295489 295491 295492 295494 295497 295499 295502 295505 295507 295508 295510 295513 295515 295516 295518 295521 295523 295526 295528 295532 295535 295537 295538 295540 295543 295545 295548 295850 295984 295986 296065 296068 296488 296490 296493 296583 296994 296997 296998 297098 297101 297103 297104 297106 297109 297264 297501 297503 297624 297776 297778 297779 297783 298008 298011 298138 298141 298144 298299 298305 299336 299856 299865 299874 299882 300396 300720 300949 301423 301898 301900 301903 301906 301908 301910 301913 301916 301917 301920 301924 301927 301928 301930 301933 302381 302387 302394 302401 302406 302484 302994 304016 304524 304526 305007 305504 305508 305515 305538 305539 305542 305544 306047 306524 306556 307030 307066 307450 307575 307963 307964 308047 308083 308084 308478 308482 308546 308592 308999 309050 309102 309518 309521 309525 309529 309531 309536 309539 309544 309552 309610 309611 310120 311135 311137 311140 311645 312131 312153 312654 312657 312661 ];
L = superpixels(X,2525);
BW = lazysnapping(gaborX,L,foregroundInd,backgroundInd);

% Close mask with disk
radius = 5;
decomposition = 4;
se = strel('disk', radius, decomposition);
BW = imclose(BW, se);

% Close mask with disk
radius = 20;
decomposition = 8;
se = strel('disk', radius, decomposition);
BW = imclose(BW, se);

% Create masked image.
maskedImage = X;
maskedImage(~BW) = 0;
end

function gaborFeatures = createGaborFeatures(im)

if size(im,3) == 3
    im = prepLab(im);
end

im = im2single(im);

imageSize = size(im);
numRows = imageSize(1);
numCols = imageSize(2);

wavelengthMin = 4/sqrt(2);
wavelengthMax = hypot(numRows,numCols);
n = floor(log2(wavelengthMax/wavelengthMin));
wavelength = 2.^(0:(n-2)) * wavelengthMin;

deltaTheta = 45;
orientation = 0:deltaTheta:(180-deltaTheta);

g = gabor(wavelength,orientation);
gabormag = imgaborfilt(im(:,:,1),g);

for i = 1:length(g)
    sigma = 0.5*g(i).Wavelength;
    K = 3;
    gabormag(:,:,i) = imgaussfilt(gabormag(:,:,i),K*sigma);
end

% Increases liklihood that neighboring pixels/subregions are segmented together
X = 1:numCols;
Y = 1:numRows;
[X,Y] = meshgrid(X,Y);
featureSet = cat(3,gabormag,X);
featureSet = cat(3,featureSet,Y);
featureSet = reshape(featureSet,numRows*numCols,[]);

% Normalize feature set
featureSet = featureSet - mean(featureSet);
featureSet = featureSet ./ std(featureSet);

gaborFeatures = reshape(featureSet,[numRows,numCols,size(featureSet,2)]);

% Add color/intensity into feature set
gaborFeatures = cat(3,gaborFeatures,im);

end

function out = prepLab(in)

% Convert L*a*b* image to range [0,1]
out = in;
out(:,:,1) = in(:,:,1) / 100;  % L range is [0 100].
out(:,:,2) = (in(:,:,2) + 86.1827) / 184.4170;  % a* range is [-86.1827,98.2343].
out(:,:,3) = (in(:,:,3) + 107.8602) / 202.3382;  % b* range is [-107.8602,94.4780].

end
